<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnCrear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DzBJ+h8RiefX9KdyWAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="BtnActualizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8EDi8gv5DxEFec6mmFOtAAAAAElFTkSuQmCC
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAdicionar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vPyQKn+AC88AAAAASUVORK5CYII=
</value>
  </data>
</root>